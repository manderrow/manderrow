name: 'build'

on:
  release:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest' # for Arm based macs (M1 and above).
            args: '--target aarch64-apple-darwin'
            rust_targets: 'aarch64-apple-darwin'
          - platform: 'macos-latest' # for Intel based macs.
            args: '--target x86_64-apple-darwin'
            rust_targets: 'x86_64-apple-darwin'
          - platform: 'ubuntu-22.04'
            args: ''
            rust_targets: ''
          - platform: 'windows-latest'
            args: ''
            rust_targets: 'x86_64-pc-windows-gnu'

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf wine64-development-tools

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'pnpm'
          cache-dependency-path: 'pnpm-lock.yaml'

      - name: Install Rust
        uses: dtolnay/rust-toolchain@nightly
        with:
          targets: ${{ matrix.rust_targets }}

      - uses: mlugg/setup-zig@v2
        with:
          version: 0.15.0-dev.1552+b87b95868

      - name: Install frontend dependencies
        run: pnpm install

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: ${{ matrix.args }}
          releaseName: ${{ github.event_name != 'release' && 'Nightly' || null }}
          releaseId: ${{ github.event.release && github.event.release.id }}
          tagName: ${{ github.event.release && github.event.release.tag_name || 'nightly' }}
          prerelease: ${{ github.event_name != 'release' || github.event.release.tag_name == 'nightly' }}

